<div class="section-body">
    <h2 class="section-title">Dashboard</h2>
    <p class="section-lead">Data Map Kecamatan <%= districtActive.nama || 'Not Set' %>.</p>
    <div class="card">
        <div class="card-body">
            <div id="map" data-height="700" style="height: 700px; position: relative; overflow: hidden;"></div>
            <div class="row justify-content-center">
                <a href="/map" class="btn btn-primary btn-sm mt-3">Lihat Full Map</a>
            </div>
        </div>
    </div>
</div>

<script src="/javascripts/leaflet.ajax.js"></script>
<script>
    const backEndVillage = JSON.parse('<%- villages %>');
    const backEndGeoJson = '<%- geojson %>';
    function ucfirst(string){
        return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
    }

    // ICON
    var LeafIcon = L.Icon.extend({
        options: {
            shadowUrl: '/icons/leaf-shadow.png',
            iconSize:     [38, 95],
            shadowSize:   [50, 64],
            iconAnchor:   [22, 94],
            shadowAnchor: [4, 62],
            popupAnchor:  [-3, -76]
        }
    });
    orangeIcon = new LeafIcon({iconUrl: '/icons/leaf-orange.png'});
    L.icon = function (options) {
        return new L.Icon(options);
    };

    var littleton = L.marker([-6.9301741,106.9159347]).bindPopup('This is Littleton, CO.'),
        denver    = L.marker([-6.9319971,106.9098942]).bindPopup('This is Denver, CO.');
        
    var asu = L.marker([-6.9263813,106.9086348], {
        icon: orangeIcon
    }).bindPopup('This is Denver, CO.');

    // Layer Maps
    var asus = L.layerGroup([asu])
    var cities = L.layerGroup([littleton, denver]);

	const map = L.map('map',{
        layers: [cities, asus]
    }).setView(['<%= district.latitude %>', '<%= district.longitude %>'], 14);

    var overlayMaps = {
        "Cities": cities,
        "Asus": asus
    };

    L.control.layers(null, overlayMaps, {position: 'bottomleft'}).addTo(map);

	const tiles = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
		maxZoom: 18,
		attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, ' +
			'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
		id: 'mapbox/streets-v11',
		tileSize: 512,
		zoomOffset: -1
	}).addTo(map);

    var info = L.control();

    // RIGHT POPUP
    info.onAdd = function (map) {
        this._div = L.DomUtil.create('div', 'info');
        this.update();
        return this._div;
    };

    info.update = function (props) {
        let desa = ''
        let luas = ''
        backEndVillage.map(val => {
            if(props){
                desa += props['DESA'] == val[0].toUpperCase() ? val[0] : '';
                luas += props['DESA'] == val[0].toUpperCase() ? val[2] : ''
            }
        })
        this._div.innerHTML = '<h4>KECAMATAN <%= districtActive.nama.toUpperCase() || "Not Set" %></h4><b></b> ' 
                              + (props ? 'Kelurahan ' + (desa) + '<br> Luas '  + luas + ' Km&sup2;' : ' Luas: <%- district.luas %> Km&sup2;');
    };

    info.addTo(map);

    // HIGHLIGHT
    function highlightFeature(e) {
        const layer = e.target;

        layer.setStyle({
            weight: 5,
            color: '#666',
            dashArray: '',
            fillOpacity: 0.7
        });

        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
            layer.bringToFront();
        }
        info.update(layer.feature.properties);
    }

    function resetHighlight(e) {
        geojson.resetStyle(e.target);

        info.update()
    }

	function onEachFeature(f,l){
        let out = [];
        if (f.properties){
            out.push(f.properties['DESA']);
            l.bindPopup(out.join("<br />"));
            l.on({
                mouseover: highlightFeature,
                mouseout: resetHighlight,
            });
        }
    }

    function style(f){
        let color = '';
        backEndVillage.forEach(val => {
            color += f.properties['DESA'] == val[0].toUpperCase() ? val[1] : '';
        })
        return {
            "color": color,
            "weight": 2,
            "opacity": 0.2
        };
    }

    // MAPS GEOJSON
    let geojson = new L.GeoJSON.AJAX(backEndGeoJson.split(','),{ onEachFeature, style }).addTo(map);

    // LEGEND
    const legend = L.control({position: 'bottomright'});

    legend.onAdd = function (map) {
        let div = L.DomUtil.create('div', 'info legend');
        div.innerHTML = '<p>Indikator Kelurahan</p>';
        backEndVillage.forEach(val => {
            div.innerHTML += `<p><i style="background:${ val[1] }"></i> ${ ucfirst(val[0]) }</p>`;
        })

        return div;
    };

    legend.addTo(map);
</script>